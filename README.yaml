---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Elasticache

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-elasticache

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-elasticache/actions/workflows/terraform.yml"

#  description of this project
# yamllint disable rule:line-length
description: |-
  Terraform module to create Elasticache Cluster and replica for Redis and Memcache.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage : |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Redis
  ```hcl
      module "redis" {
      source                       = "clouddrove/elasticache/aws
      version                      = "1.3.0"
      name                         = "redis"
      environment                  = "test"
      label_order                  = ["environment", "name"]
      engine                       = "redis"
      engine_version               = "5.0.0"
      family                       = "redis5.0"
      port                         = 6379
      node_type                    = "cache.t2.micro"
      subnet_ids                   = ["subnet-xxxxxxx","subnet-xxxxxxx","subnet-xxxxxxx"]
      security_group_ids           = ["sg-xxxxxxxxx"]
      availability_zones           = ["eu-west-1a","eu-west-1b" ]
      auto_minor_version_upgrade   = true
      num_cache_clusters           = 2
     }

  ```
  ### Redis Cluster
  ```hcl
      module "redis-cluster" {
      source                      = "clouddrove/elasticache/aws
      version                     = "1.3.0"
      name                        = "cluster"
      environment                 = "test"
      label_order                 = ["environment","name"]
      cluster_replication_enabled = true
      engine                      = "redis"
      engine_version              = "5.0.0"
      family                      = "redis5.0"
      port                        = 6379
      node_type                   = "cache.t2.micro"
      subnet_ids                  = module.subnets.public_subnet_id
      security_group_ids          = [module.redis-sg.security_group_ids]
      availability_zones          = ["eu-west-1a","eu-west-1b" ]
      auto_minor_version_upgrade  = true
      replicas_per_node_group     = 2
      num_node_groups             = 1
      automatic_failover_enabled  = true
    }
  ```
  ### Memcache
  ```hcl
      module "memcached" {
      source                       = "clouddrove/elasticache/aws
      version                      = "1.3.0"
      name                         = "memcached"
      environment                  = "test"
      label_order                  = ["environment", "name"]
      cluster_enabled              = true
      engine                       = "memcached"
      engine_version               = "1.5.10"
      family                       = "memcached1.5"
      parameter_group_name         = "default.memcached1.5"
      az_mode                      = "cross-az"
      port                         = 11211
      node_type                    = "cache.t2.micro"
      num_cache_nodes              = 2
      subnet_ids                   = ["subnet-xxxxxxx","subnet-xxxxxxx","subnet-xxxxxxx"]
      security_group_ids           = ["sg-xxxxxxxxx"]
      availability_zones           = ["eu-west-1a","eu-west-1b" ]
      }
  ```
